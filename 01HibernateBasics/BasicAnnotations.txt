@Entity --> This given at class level to tell hibernate this object table needs to be created
@Table(name ="") --> Gives the name of the table by keeping the name of the entity same as class name
which needs to be used in HQL Query.
@ID() --> This defines the primary key of the table.
@Basic() --> This is by default taken by hibernate as this tells hibernate that field need to be saved in DB.
@Transient() --> This tells hibernate that this field needs not to be saved in DB.
@Temporal(TemporalType.Date) --> This annotation present on Date field tells the Hibernate to save 
the date by ignoring the timestamp.

@Lob() --> This tells Hibernate that any column not to take as Default varchar of 255 as this field 
can have large no of character.
@Embeddable() --> this annotation tells this does have stand alone meaning but goes inside the other entity class.
@Embeded() --> We need to mark the object as Embeded for the Value Object class mark 
as Embeddable inside the Entity class it is present.
@AttributeOverride() --> This is used override the default column given in the Value Object (Embedable Object).
@AttributeOverrides() --> This is used as a parent of Attributeoveride and it contains multiple Attribute Override which overrides the each colmn name.
@EmbeddedId() --> This is used for the using the Embeddable Object as primary Key. 
In this case we cannot use @Id and @GeneratedValue in Embedded Object.
@ElementCollection() --> By this Hibernate know that Address needs to be the separate table
 which is created and it stores the different data for 1 particular object and the 
 foriegn key of Address table will be the primary of User details.
@JoinTable(name="") --> This is used to give the name of the new table created by Hibernate.
joinColumn=@JoinColumn(name="") --> It is property of @JoinTable which is used to give the name of the foriegn key.
 